// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Entity;

namespace Persistence.Migrations
{
    [DbContext(typeof(Entities))]
    [Migration("20240511104418_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Persistence.Entity.Product.Product", b =>
                {
                    b.Property<Guid>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AliasName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<long>("IdRefObjectState")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("IdUserCreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUserUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdProduct");

                    b.HasIndex("IdRefObjectState");

                    b.HasIndex("IdUserCreatedBy");

                    b.HasIndex("IdUserUpdatedBy");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Product","Product");

                    b.HasData(
                        new
                        {
                            IdProduct = new Guid("8beca0a3-dde0-4af4-9197-c669a2ba754f"),
                            AliasName = "Product 1",
                            Description = "Product 1",
                            IdRefObjectState = 1L,
                            Name = "Product 1"
                        });
                });

            modelBuilder.Entity("Persistence.Entity.RefObjectState.RefObjectState", b =>
                {
                    b.Property<long>("IdRefObjectState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AliasName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<Guid?>("IdUserCreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUserUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdRefObjectState");

                    b.HasIndex("IdUserCreatedBy");

                    b.HasIndex("IdUserUpdatedBy");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RefObjectState","dbo");

                    b.HasData(
                        new
                        {
                            IdRefObjectState = 1L,
                            AliasName = "Active",
                            Description = "Active",
                            IsDefault = true,
                            IsDisplay = false,
                            Name = "Active"
                        },
                        new
                        {
                            IdRefObjectState = 2L,
                            AliasName = "Terminated",
                            Description = "Terminated",
                            IsDefault = false,
                            IsDisplay = false,
                            Name = "Terminated"
                        },
                        new
                        {
                            IdRefObjectState = 3L,
                            AliasName = "Frozen",
                            Description = "Frozen",
                            IsDefault = false,
                            IsDisplay = false,
                            Name = "Frozen"
                        });
                });

            modelBuilder.Entity("Persistence.Entity.Security.User", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AliasName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("IdRefObjectState")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("IdUserCreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUserUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUser");

                    b.HasIndex("IdRefObjectState");

                    b.HasIndex("IdUserCreatedBy");

                    b.HasIndex("IdUserUpdatedBy");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("User","Security");

                    b.HasData(
                        new
                        {
                            IdUser = new Guid("48c9419f-6872-4167-9a07-ce63a1644328"),
                            AliasName = "Admin",
                            CreatedDate = new DateTime(2024, 5, 11, 18, 44, 18, 419, DateTimeKind.Local).AddTicks(3208),
                            Description = "Admin user",
                            DisplayName = "Admin",
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            IdRefObjectState = 1L,
                            LastName = "Admin",
                            MiddleName = "Bin",
                            Name = "Admin",
                            Password = "admin123",
                            PhoneNo = "0123456789",
                            UpdatedDate = new DateTime(2024, 5, 11, 18, 44, 18, 420, DateTimeKind.Local).AddTicks(4393)
                        });
                });

            modelBuilder.Entity("Persistence.Entity.Product.Product", b =>
                {
                    b.HasOne("Persistence.Entity.RefObjectState.RefObjectState", "RefObjectState1")
                        .WithMany("Products1")
                        .HasForeignKey("IdRefObjectState")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Persistence.Entity.Security.User", "User1")
                        .WithMany("Products1")
                        .HasForeignKey("IdUserCreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Persistence.Entity.Security.User", "User2")
                        .WithMany("Products2")
                        .HasForeignKey("IdUserUpdatedBy")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Persistence.Entity.RefObjectState.RefObjectState", b =>
                {
                    b.HasOne("Persistence.Entity.Security.User", "User1")
                        .WithMany("RefObjectStates1")
                        .HasForeignKey("IdUserCreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Persistence.Entity.Security.User", "User2")
                        .WithMany("RefObjectStates2")
                        .HasForeignKey("IdUserUpdatedBy")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Persistence.Entity.Security.User", b =>
                {
                    b.HasOne("Persistence.Entity.RefObjectState.RefObjectState", "RefObjectState1")
                        .WithMany("Users1")
                        .HasForeignKey("IdRefObjectState")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Persistence.Entity.Security.User", "User1")
                        .WithMany("Users1")
                        .HasForeignKey("IdUserCreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Persistence.Entity.Security.User", "User2")
                        .WithMany("Users2")
                        .HasForeignKey("IdUserUpdatedBy")
                        .OnDelete(DeleteBehavior.NoAction);
                });
#pragma warning restore 612, 618
        }
    }
}
